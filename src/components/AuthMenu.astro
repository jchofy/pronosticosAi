---
import { getSession } from 'auth-astro/server';

const session = await getSession(Astro.request);
const { isMobile = false } = Astro.props;
---

{session ? (
  <!-- Usuario logueado -->
  <div class={`user-menu ${isMobile ? 'mobile' : 'desktop'}`}>
    {isMobile ? (
      <!-- Menú móvil -->
      <div class="px-3 py-3 border-t border-gray-100">
        <div class="flex items-center gap-3 mb-3">
          {session.user.image && (
            <img 
              src={session.user.image} 
              alt={session.user.name} 
              class="w-10 h-10 rounded-full"
            />
          )}
          <div class="flex-1 min-w-0">
            <p class="text-sm font-medium text-gray-900 truncate">{session.user.name}</p>
            <p class="text-xs text-gray-500 truncate">{session.user.email}</p>
          </div>
        </div>
        <div class="space-y-2">
          <a href="/cuenta" class="flex items-center gap-3 rounded-xl px-3 py-2 text-sm hover:bg-gray-50 transition-colors">
            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            Mi cuenta
          </a>
          <button 
            onclick="signOut()" 
            class="flex items-center gap-3 rounded-xl px-3 py-2 text-sm hover:bg-red-50 text-red-600 transition-colors w-full text-left"
          >
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
            </svg>
            Cerrar sesión
          </button>
        </div>
      </div>
    ) : (
      <!-- Menú escritorio -->
      <div class="relative inline-block text-left">
        <button 
          onclick="toggleUserMenu()"
          class="flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-colors"
          id="user-menu-button"
          aria-expanded="false"
          aria-haspopup="true"
        >
          {session.user.image && (
            <img 
              src={session.user.image} 
              alt={session.user.name} 
              class="w-8 h-8 rounded-full"
            />
          )}
          <div class="hidden sm:block text-left">
            <p class="text-sm font-medium text-gray-900 max-w-32 truncate">{session.user.name}</p>
            <p class="text-xs text-gray-500 max-w-32 truncate">{session.user.email}</p>
          </div>
          <svg class="w-4 h-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
          </svg>
        </button>

        <!-- Dropdown menu -->
        <div 
          id="user-dropdown"
          class="hidden absolute right-0 mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-200 z-50"
        >
          <div class="py-1">
            <a 
              href="/cuenta" 
              class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50"
            >
              <svg class="h-4 w-4 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              Mi cuenta
            </a>
            <hr class="border-gray-100">
            <button 
              onclick="signOut()" 
              class="flex items-center gap-3 px-4 py-2 text-sm text-red-600 hover:bg-red-50 w-full text-left"
            >
              <svg class="h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
              </svg>
              Cerrar sesión
            </button>
          </div>
        </div>
      </div>
    )}
  </div>
) : (
  <!-- Usuario no logueado -->
  <div class={`auth-buttons ${isMobile ? 'mobile' : 'desktop'}`}>
    {isMobile ? (
      <!-- Botones móvil -->
      <div class="px-3 py-3 border-t border-gray-100 space-y-2">
        <button 
          onclick="signIn('google')" 
          class="flex items-center justify-center gap-3 w-full rounded-xl px-3 py-3 text-sm bg-blue-500 text-white hover:bg-blue-600 transition-colors"
        >
          <svg class="w-4 h-4" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
            <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
            <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
            <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
          </svg>
          Google
        </button>
        <a 
          href="/login" 
          class="flex items-center justify-center gap-3 w-full rounded-xl px-3 py-3 text-sm bg-gray-500 text-white hover:bg-gray-600 transition-colors"
        >
          <svg class="w-4 h-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
          </svg>
          Iniciar sesión
        </a>
      </div>
    ) : (
      <!-- Botones escritorio -->
      <div class="flex items-center gap-2">
        <button 
          onclick="signIn('google')" 
          class="flex items-center gap-2 px-3 py-2 text-sm bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
        >
          <svg class="w-4 h-4" viewBox="0 0 24 24">
            <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
            <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
            <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
            <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
          </svg>
          <span class="hidden sm:inline">Google</span>
        </button>
        <a 
          href="/login" 
          class="px-3 py-2 text-sm text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
        >
          Entrar
        </a>
      </div>
    )}
  </div>
)}

<script>
  import { signIn, signOut } from 'auth-astro/client';
  
  window.signIn = signIn;
  window.signOut = signOut;

  // Toggle user dropdown menu
  window.toggleUserMenu = function() {
    const button = document.getElementById('user-menu-button');
    const dropdown = document.getElementById('user-dropdown');
    
    if (dropdown && button) {
      const isOpen = !dropdown.classList.contains('hidden');
      
      if (isOpen) {
        dropdown.classList.add('hidden');
        button.setAttribute('aria-expanded', 'false');
      } else {
        dropdown.classList.remove('hidden');
        button.setAttribute('aria-expanded', 'true');
      }
    }
  };

  // Close dropdown when clicking outside
  document.addEventListener('click', function(event) {
    const dropdown = document.getElementById('user-dropdown');
    const button = document.getElementById('user-menu-button');
    
    if (dropdown && button && !button.contains(event.target) && !dropdown.contains(event.target)) {
      dropdown.classList.add('hidden');
      button.setAttribute('aria-expanded', 'false');
    }
  });
</script>

<style>
  .user-menu.desktop {
    @apply flex items-center;
  }
  
  .auth-buttons.desktop {
    @apply flex items-center;
  }
</style>
